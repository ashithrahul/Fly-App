version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword123
      MYSQL_DATABASE: myapp_db
      MYSQL_USER: myapp_user
      MYSQL_PASSWORD: myapp_password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword123"]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 80s

  backend:
    build:
      context: ./Fly-Backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    environment:
      DB_HOST: mysql
      DB_USER: myapp_user
      DB_PASSWORD: myapp_password
      DB_NAME: myapp_db
      PORT: 3000
      NODE_ENV: development
    ports:
      - "1001:3000"
    volumes:
      - ./Fly-Backend:/app
      - /app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    command: npm start

  frontend:
    build:
      context: ./Fly-Frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  mysql-data:

networks:
  app-network:
    driver: bridge